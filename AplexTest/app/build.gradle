apply plugin: 'com.android.application'

android {
    compileSdkVersion 22
    buildToolsVersion "27.0.2"

    defaultConfig {
        applicationId "com.aplex"
        minSdkVersion 15
        targetSdkVersion 22
        versionCode 1
        versionName "1.0"

        ndk{
            moduleName "aplexTest"         //生成的so名字
            ldLibs "log"
            abiFilters = ['armeabi']
            abiFilters "armeabi", "armeabi-v7a", "x86"  //输出指定三种abi体系结构下的so库。目前可有可无。
        }
        task ndkClean(type: Delete) {
            // remove unused archs from build cache
            delete fileTree('.externalNativeBuild') {
                exclude defaultConfig.ndk.abiFilters.collect { '**/' + it }
            }
        }

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    provided files(getLayoutLibPath())
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:22.2.1'
//    provided files(getLayoutLibPath())
}

// must called after "android" definition
def getLayoutLibPath() {
    def rootDir = project.rootDir
    def localProperties = new File(rootDir, "local.properties")
    if (localProperties.exists()) {
        Properties properties = new Properties()
        localProperties.withInputStream {
            instr -> properties.load(instr)
        }
        def sdkDir = properties.getProperty('sdk.dir')
        def compileSdkVersion = android.compileSdkVersion
        Console.println("app compileSdkVersion : " + compileSdkVersion)
        def androidJarPath = sdkDir + "/platforms/" + compileSdkVersion + "/data/layoutlib.jar"
        return androidJarPath
    }
    return rootDir
}
